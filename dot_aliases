alias zshrc='nvim ~/.zshrc && source ~/.zshrc'
alias aliases='nvim ~/.aliases && source ~/.zshrc'

# -------------------
# üîπ SYSTEM UTILITIES
# -------------------

alias free_space="df -h --total | grep total"  # Show disk space in human-readable format
alias meminfo="free -h"  # Show available RAM
alias processes="ps aux --sort=-%cpu | head -15"  # Show top CPU-consuming processes
alias reboot_now="sudo systemctl reboot"  # Quick reboot
alias shutdown_now="sudo systemctl poweroff"  # Quick shutdown

alias trash='mv --force -t ~/.local/share/Trash '
alias print='echo'

# Bat (better `cat` replacement)
if command -v bat &>/dev/null; then
    alias cat='bat --style=plain'
fi

# Use `duf` for better disk usage overview
if command -v duf &>/dev/null; then
    alias df='duf --only local'
fi

# Use `htop` if installed
if command -v htop &>/dev/null; then
    alias top='htop'
fi

# üîç Detect Package Manager
get_package_manager() {
    if command -v yay &>/dev/null; then echo "yay"
    elif command -v dnf &>/dev/null; then echo "dnf"
    elif command -v apt &>/dev/null; then echo "apt"
    elif command -v pacman &>/dev/null; then echo "pacman"
    elif command -v brew &>/dev/null; then echo "brew"
    else echo ""; fi
}

# -------------------
# üîπ NETWORKING
# -------------------

alias myip="curl ifconfig.me"  # Get public IP address
alias flush_dns="sudo systemd-resolve --flush-caches && sudo systemctl restart systemd-resolved"  # Flush DNS cache
alias speedtest="fast"  # Run a quick speed test (requires `fast` CLI from Fast.com)
alias nmap_local="sudo nmap -sP 192.168.50.0/24"  # Scan local network for active devices
alias restart_network="sudo systemctl restart NetworkManager"  # Restart NetworkManager

# -------------------
# üîπ FILE & DIRECTORY NAVIGATION
# -------------------

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias docs="cd ~/Documents"
alias dl="cd ~/Downloads"
alias repos="cd ~/Repos"
alias unraid="cd /mnt/unraid"
# Exa (Better `ls`)
if command -v exa &>/dev/null; then
    alias ls='exa --icons'
    alias ll='exa -l --icons'                      # Long format
    alias la='exa -la --icons'                     # Long format, including hidden files
    alias list='exa -la --icons'
    alias lt='exa -lT --icons'                     # Tree view
    alias ltr='exa -lT --icons --reverse'          # Tree view, reversed
    alias lr='exa -l --reverse --icons'            # Long format, reversed
    alias l1='exa -1 --icons'                      # One file per line
    alias ld='exa -ld --icons */'                  # List directories only
    alias lg='exa -l --git --icons'                # Show Git metadata
    alias lf='exa -l --icons | grep'               # List files and grep results
    alias lsd='exa -D --icons'                     # Only show directories
fi

# -------------------
# üîπ GIT SHORTCUTS
# -------------------

alias g="git"
alias gs="git status"
alias ga="git add ."
alias gc="git commit -m"
alias gp="git push -u origin"
alias gl="git log --oneline --graph --decorate --all"
alias gd="git diff"
alias gco="git switch"
alias gpull="git pull origin"

alias list_services="systemctl list-units --type=service --state=running"  # Show active systemd services
alias reload_systemd="sudo systemctl daemon-reexec"  # Reload systemd without rebooting

# System Services (generic)
alias start="systemctl start"
alias status="systemctl status"
alias stop="systemctl stop"
alias restart="systemctl restart"
alias enable="systemctl enable"
alias disable="systemctl disable"

# -------------------
# üîπ MISC SHORTCUTS
# -------------------

alias watch_logs="journalctl -f"  # Watch system logs in real-time
alias top_cpu="ps -eo pid,comm,%cpu --sort=-%cpu | head"  # Show top CPU-consuming processes
alias top_mem="ps -eo pid,comm,%mem --sort=-%mem | head"  # Show top memory-consuming processes
alias search_files="find . -type f -iname"  # Search for files by name
alias search_text="grep -rnw . -e"  # Search for text inside files
# Fuzzy Finder (if installed)
if command -v fzf &>/dev/null; then
    alias fzfp="find . | fzf"
fi
alias play_music="mpv ~/Music"  # Play music from ~/Music directory
alias edit_zshrc="nano ~/.zshrc && source ~/.zshrc"  # Quick edit and apply Zsh configuration
alias extract="tar -xvf"  # Extract compressed files

# -------------------
# üîπ FLATPAK & SOFTWARE
# -------------------

alias flatpak_list="flatpak list"
alias flatpak_clean="flatpak uninstall --unused -y && flatpak repair"
alias flatpak_reset="flatpak uninstall --all -y && flatpak repair"

# -------------------
# üîπ SHORTCUTS FOR YOUR SCRIPTS
# -------------------

alias killcpu='~/.scripts/kil_high_cpu.sh'
alias brename='~/.scripts/bulk_rename.sh' #brename 
alias sysmonitor='~/.scripts/sys_monitor.sh'
alias diagnostics='~/.scripts/dignostics.sh'
alias netdiag='~/scripts/network_diagnostics.sh'
alias wifiscan='~/scripts/wifi_signal.sh'
alias bigfiles='~/scripts/find_large_files.sh'
alias screentext='~/scripts/screenshot_ocr.sh'
alias perfbench='~/scripts/performance_benchmark.sh'
alias autoshutdown='~/scripts/auto_shutdown.sh'
alias termrec='~/scripts/record_terminal.sh'
alias sysupdate='~/scripts/auto_update.sh'
alias watchdir='~/scripts/watch_directory.sh'

# -----------------------------
# Zoxide Smart Navigation
# -----------------------------

if command -v zoxide &>/dev/null; then
    eval "$(zoxide init zsh)"

    # Zoxide Aliases
    alias z='zoxide query --exclude "$(pwd)"'  # Jump using partial names
    alias zi='zoxide query --interactive'      # Interactive fuzzy search
fi

# -----------------------------
# Personal Scripts
# -----------------------------

# Define the script path
export SCRIPTS_DIR="$HOME/Repos/dotfiles/.scripts/tools"

# Function to run scripts, removing "run_" prefix for alias names
alias backup_gnome="$SCRIPTS_DIR/run_backup_gnome_settings.sh"
alias btrfs_backup="$SCRIPTS_DIR/run_btrfs_backup.sh"
alias bulk_rename="$SCRIPTS_DIR/run_bulk_rename.sh"
alias wifi_signal="$SCRIPTS_DIR/run_check_wifi_signal.sh"
alias convert_video="$SCRIPTS_DIR/run_convert_video.sh"
alias diagnostics="$SCRIPTS_DIR/run_diagnostics.sh"
alias dnf_refresh="$SCRIPTS_DIR/run_dnf_refresh.sh"
alias find_large_files="$SCRIPTS_DIR/run_find_large_files.sh"
alias kill_high_cpu="$SCRIPTS_DIR/run_kill_high_cpu.sh"
alias mount_usb="$SCRIPTS_DIR/run_mount_usb.sh"
alias move_flatpaks="$SCRIPTS_DIR/run_move_flatpaks.sh"
alias benchmark="$SCRIPTS_DIR/run_performance_benchmark.sh"
alias record_terminal="$SCRIPTS_DIR/run_record_terminal.sh"
alias screenshot_ocr="$SCRIPTS_DIR/run_screenshot_ocr.sh"
alias network_diag="$SCRIPTS_DIR/run_network_diagnostics.sh"
alias system_diag="$SCRIPTS_DIR/run_system_diagnostics.sh"
alias system_migrate="$SCRIPTS_DIR/run_system_migration.sh"
alias watch_directory="$SCRIPTS_DIR/run_watch_directory.sh"

# Ensure all scripts are executable
chmod +x $SCRIPTS_DIR/*.sh

dotfiles-sync() {
    echo "üîÑ Running dotfiles sync..."
    "$SCRIPTS_DIR/run_dotfiles_sync.sh"
    source ~/.zshrc
}

dotfiles-upload() {
    echo "üöÄ Uploading local dotfiles to repo..."
    "$SCRIPTS_DIR/run_dotfiles_upload.sh"
    source ~/.zshrc
}

dotfiles-download() {
    echo "üì• Downloading dotfiles from remote repo..."
    "$SCRIPTS_DIR/run_dotfiles_download.sh"
    source ~/.zshrc
}

dotfiles-add() {
    if [ -z "$1" ]; then
        echo "‚ö†Ô∏è Usage: dotfiles-add <file>"
        return 1
    fi
    echo "‚ûï Adding $1 to dotfiles repo..."
    "$SCRIPTS_DIR/run_dotfiles_add.sh" "$1"
    source ~/.zshrc
}

dotfiles-remove() {
    if [ -z "$1" ]; then
        echo "‚ö†Ô∏è Usage: dotfiles-remove <file>"
        return 1
    fi
    echo "‚ùå Removing $1 from dotfiles repo..."
    "$SCRIPTS_DIR/run_dotfiles_remove.sh" "$1"
    source ~/.zshrc
}

